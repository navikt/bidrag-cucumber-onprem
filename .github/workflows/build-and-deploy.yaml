name: build and deploy
on:
  push:
    branches:
      - '**'

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  INGRESS_CUCUMBER: https://bidrag-cucumber-onprem.dev.adeo.no

jobs:
  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: navikt/bidrag-docker/exists@v1
        id: dockerimage
        with:
          image_name: bidrag-cucumber-onprem
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo NOT_FOUND=${{ steps.dockerimage.outputs.not_found }} >> $GITHUB_ENV
      - uses: actions/checkout@v2
        if: env.NOT_FOUND == 'true'
      - uses: actions/setup-java@v1
        if: env.NOT_FOUND == 'true'
        with:
          java-version: '17'
      - uses: actions/cache@v1
        if: env.NOT_FOUND == 'true'
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-maven/setup@v7
        if: env.NOT_FOUND == 'true'
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,github-packages=https://maven.pkg.github.com/navikt/maven-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: navikt/bidrag-maven/verify-dependencies@v7
        if: env.NOT_FOUND == 'true'
      - run: mvn install -B -e
        if: env.NOT_FOUND == 'true'
      - name: Build and publish Docker image
        if: env.NOT_FOUND == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker image build --tag ${IMAGE} .
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker image push ${IMAGE}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy bidrag-cucumber-onprem
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - name: Deploy bidrag-cucumber-onprem testapplication for main branches to dev-fss
        if: github.ref == 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/main.yaml
      - name: Deploy bidrag-cucumber-onprem testapplication for feature branches to dev-fss
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/feature.yaml

  run-tests-for-cucumber-onprem:
    runs-on: self-hosted
    name: bidrag-cucumber-onprem
    needs: deploy

    steps:
      - run: echo "INGRESS_CUCUMBER=https://bidrag-cucumber-onprem-feature.dev.adeo.no" >> $GITHUB_ENV
        if: github.ref != 'refs/heads/main'
      - run: |
          curl -X 'POST' ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-onprem/run -i \
            -H 'accept: */*' \
            -H 'Content-Type: application/json' \
            -d '{
              "ingressesForApps":["${{ env.INGRESS_CUCUMBER }}@bidrag-cucumber-onprem"]
            }' | tee .cucumber-result
          cat .cucumber-result | grep HTTP/1.1 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)

  run-tests-for-bidrag-beregn:
    runs-on: self-hosted
    name: bidrag-beregn-*
    needs: deploy

    env:
      INGRESS_BARNEBIDRAG: https://bidrag-beregn-barnebidrag-rest.dev.adeo.no
      INGRESS_FORSKUDD: https://bidrag-beregn-forskudd-rest.dev.adeo.no
      INGRESS_SAERTILSKUDD: https://bidrag-beregn-saertilskudd-rest.dev.adeo.no

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_BARNEBIDRAG=https://bidrag-beregn-barnebidrag-rest-feature.dev.adeo.no" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-onprem-feature.dev.adeo.no" >> $GITHUB_ENV
          echo "INGRESS_FORSKUDD=https://bidrag-beregn-forskudd-rest-feature.dev.adeo.no" >> $GITHUB_ENV
          echo "INGRESS_SAERTILSKUDD=https://bidrag-beregn-saertilskudd-rest-feature.dev.adeo.no" >> $GITHUB_ENV
      - run: |
          curl -X 'POST' ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-onprem/run -i \
            -H 'accept: */*' \
            -H 'Content-Type: application/json' \
            -d '{
              "ingressesForApps":[
                "${{ env.INGRESS_BARNEBIDRAG }}@bidrag-beregn-barnebidrag-rest",
                "${{ env.INGRESS_FORSKUDD }}@bidrag-beregn-forskudd-rest",
                "${{ env.INGRESS_SAERTILSKUDD }}@bidrag-beregn-saertilskudd-rest"
              ]
          }' | tee .cucumber-result
          cat .cucumber-result | grep HTTP/1.1 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)

  run-tests-for-dokument-arkiv:
    runs-on: self-hosted
    name: bidrag-dokument-arkiv
    needs: deploy

    env:
      INGRESS_ARKIV: https://bidrag-dokument-arkiv.dev.adeo.no

    steps:
      - run: |
          echo "INGRESS_ARKIV=https://bidrag-dokument-arkiv-feature.dev.adeo.no" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-onprem-feature.dev.adeo.no" >> $GITHUB_ENV
        if: github.ref != 'refs/heads/main'
      - run: |
          curl -X 'POST' ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-onprem/run -i \
            -H 'accept: */*' \
            -H 'Content-Type: application/json' \
            -d '{
              "tags":["@arkiv-swagger"],"ingressesForApps":["${{ env.INGRESS_ARKIV }}@no-tag:bidrag-dokument-arkiv"]
            }' | tee .cucumber-result
          cat .cucumber-result | grep HTTP/1.1 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)

  bump_dev_version:
    runs-on: ubuntu-latest
    name: Bump SNAPSHOT version
    if: github.ref == 'refs/heads/main'
    needs:
      - run-tests-for-cucumber-onprem
      - run-tests-for-bidrag-beregn
      - run-tests-for-dokument-arkiv

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn release:update-versions
      - run: |
          BUMPED_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ::set-output name=version::${BUMPED_VERSION}
        id: snapshot
      - uses: navikt/bidrag-git/commit@v5
        with:
          commit_message: "Bumped to new version: ${{ steps.snapshot.outputs.version }}"
          pattern: "pom.xml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
